@model IEnumerable<eBroker.InsurancePolicy>
@using GridMvc.Html
@{
    ViewBag.Title = "Expiry Notice List";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string startDate = ViewBag.StartDate;
    string endDate = ViewBag.EndDate;
}
<form action="ExpiryNoticeView" method="post" class="form-inline">
    <div class="container">
        <div class="panel panel-green">
            <div class="panel-heading">Expiry Notice List</div>
            <div class="panel-body">
                <div class="row">
                    <div class="panel-body">
                        <div class="row">
                            @*                        <div class="col-sm-2">
                            <span><i class="fa fa-briefcase"></i>@Html.ActionLink(" New Policy", "PolicyInfo")</span>
                        </div>*@
                            <div class="col-sm-10">
                                @*<div id="custom-search-input">*@
                                <div class="col-sm-3">
                                    <input type="text" size="50" name="startDate" id="startDate" class="form-control" placeholder="Start Date" />
                                </div>
                                <div class="input-group">
                                    <div>
                                        <input type="text" name="endDate" id="endDate" class="form-control" placeholder="End Date" />
                                    </div>
                                    <span class="input-group-btn">
                                        <button class="btn btn-info btn-sm" value="Search" type="submit"><i class="fa fa-search"></i></button>
                                    </span>
                                    @Html.Hidden("startDate", startDate)
                                    @Html.Hidden("endDate", endDate)


                                </div>
                                @*</div>*@
                            </div>
                        </div>
                        <div class="row">
                            <div class="table table-bordered">
                                @Html.Grid(Model).Named("ga").Columns(col =>
                           {
                               col.Add(m => m.Id, true);
                               //col.Add().Titled("Edit").Sanitized(false).Encoded(false).RenderValueAs(m => Html.Bootstrap().ActionLink("Edit", "PolicyInfo").RouteValues(new { Id = m.Id }).PrependIcon("fa fa-pencil-square-o"));
                               col.Add(m => m.policy_no).Titled("Policy No.");
                               // col.Add(m => m.policy_type).Titled("Type");
                               col.Add(m => m.InsuranceProducts.product_name).Titled("Product");
                               col.Add(m => m.Partners.company_short_name).Titled("Insurer");
                               col.Add(m => m.Clients.client_name).Titled("Client Name");
                               col.Add(m => m.Clients.mobile).Titled("Mobile");
                               col.Add(m => m.effective_dt).Titled("Effective Date").Format("{0:yyyy-MM-dd}");
                               col.Add(m => m.expiry_dt).Titled("Expiry Date").Format("{0:yyyy-MM-dd}");
                               col.Add(m => m.net_premium).Titled("Premium").Format("{0:#,##0}");
                               //col.Add(m => m.renewable).Titled("Renewable");
                               //col.Add().Sanitized(false).Encoded(false).RenderValueAs(m => Html.ActionLink("View Insurance Policy(ies)", "InsurancePolicy"));
                               col.Add().Sanitized(false).Encoded(false).RenderValueAs(m => Html.Bootstrap().ActionLink("Policy", "PolicyInfo", "Policy").RouteValues(new { Id = m.Id }).PrependIcon("fa fa-search-plus"));
                               //col.Add().Sanitized(false).Encoded(false).RenderValueAs(m => Html.Bootstrap().ActionLink("Loan Accounts", "ListPolicyLoan").RouteValues(new { CId = m.Id }).PrependIcon("fa fa-search-plus"));

                           }).Sortable(true)

                            </div>
                            @if (Model.Count() > 0)
                            {
                                @Html.Bootstrap().ActionLinkButton("Send SMS", "SendSMSNotice", "ExpiryNotice").PrependIcon("fa fa-envelope-open-o").RouteValues(new { startDate = startDate, endDate = endDate })
                                @Html.Bootstrap().ActionLinkButton("Excel", "ExportToExcel", "ExpiryNotice").RouteValues(new { startDate = startDate, endDate = endDate }).PrependIcon("fa fa-file-excel-o")

                            }
                        </div>
                    </div>

                </div>
            </div>

        </div>
        <script>
            $('#startDate').datepicker({
                dateFormat: "dd-M-yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-20:+0"
            });

            $('#endDate').datepicker({
                dateFormat: "dd-M-yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-1:+20"
            });
        </script>

    </div>
</form>
