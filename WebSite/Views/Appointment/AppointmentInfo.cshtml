@model eBroker.Appointment

@{
    ViewBag.Title = "Appointment Info";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var appointmentType = ViewBag.AppointmentTypes as List<SelectListItem>;
}
<div class="container">
    <div class="col-sm-12">
        @using (Html.BeginForm("CreateAppointment", "Appointment"))
        {
            @Html.HiddenFor(m => m.Id)
            @Html.HiddenFor(m => m.BookedBy)
            @Html.HiddenFor(m => m.BookedOn)
            @Html.HiddenFor(m => m.Status)
            List<SelectListItem> listLanguages = new List<SelectListItem>();
            listLanguages.Add(new SelectListItem
            {
                Text = "Kinyarwanda",
                Value = "Kinyarwanda"
            });
            listLanguages.Add(new SelectListItem
            {
                Text = "English",
                Value = "English",
            });
            listLanguages.Add(new SelectListItem
            {
                Text = "French",
                Value = "French"
            });
            <div class="panel panel-green">
                <div class="panel-heading">
                    <h4 class="panel-title">Appointment Details</h4>
                </div>
                <div class="panel-body">
                    <div class="row">
                        @Html.ValidationSummary(true)
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <label class="col-sm-2">
                                @Html.LabelFor(model => model.AppointmentDate)
                            </label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.AppointmentDate, "{0:yyyy-MM-dd}", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AppointmentDate)
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row">
                            <label class="col-sm-2">
                                @Html.LabelFor(model => model.AppointmentTime)
                            </label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.AppointmentTime, new {@id="txtAppointmentTime", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AppointmentTime)
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row">
                            <label class="col-sm-2">
                                @Html.LabelFor(model => model.AppointmentVenue)</label>
                            <div class="col-sm-3">
                                @Html.TextBoxFor(model => model.AppointmentVenue, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AppointmentVenue)
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row">
                            <label class="col-sm-2">
                                @Html.LabelFor(model => model.AppointmentTypeID)</label>
                            <div class="col-sm-3">
                                @Html.DropDownListFor(model => model.AppointmentTypeID, appointmentType, "-- Select Type --", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AppointmentTypeID)
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row">
                            <label class="col-sm-2">
                                @Html.LabelFor(model => model.ClientName)</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.ClientName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ClientName)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <label class="col-sm-2">
                                @Html.LabelFor(model => model.ClientPhone)</label>
                            <div class="col-sm-3">
                                @Html.TextBoxFor(model => model.ClientPhone, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ClientPhone)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <label class="col-sm-2">
                                @Html.LabelFor(model => model.ClientEmail)</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.ClientEmail, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ClientEmail)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <label class="col-sm-2">
                                @Html.LabelFor(model => model.Language)</label>
                            <div class="col-sm-3">
                                @Html.DropDownListFor(model => model.Language, listLanguages, "-- Select Language --", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Language)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <label class="col-sm-2">
                                @Html.LabelFor(model => model.Comments)</label>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(model => model.Comments, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Comments)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <label class="col-sm-2">
                                @Html.LabelFor(model => model.SendReminderToClient)</label>
                            <div class="col-sm-3">
                                @Html.CheckBoxFor(model => model.SendReminderToClient, new { @id = "SendReminderToClient", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.SendReminderToClient)
                            </div>
                        </div>
                    </div>

                    <div class="form-group">

                        <div class="row">
                            <hr />
                            <label class="col-sm-2 control-label"></label>
                            <div class="col-sm-6">
                                @Html.Bootstrap().SubmitButton().Text("Save").PrependIcon("fa fa-floppy-o")
                                @Html.Bootstrap().ActionLinkButton("Cancel", "ListAppointment").PrependIcon("fa fa-times")
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-footer">
                    <span><i class="fa fa-backward"></i>@Html.ActionLink("Back to List", "ListAppointment")</span>
                </div>
                <script>
                    $('#AppointmentDate').datepicker({
                        dateFormat: "dd-M-yy",
                        changeMonth: true,
                        changeYear: true,
                        yearRange: "-20:+0"
                    }); 
                    $('#SendReminderToClient').bootstrapToggle({
                        on: 'Yes',
                        off: 'No'
                    });
                </script>
            </div>
            @section Scripts{
            <script type="text/javascript">
                $(function () {
                    $('#SendReminderToClient').bootstrapToggle({
                        on: 'Yes',
                        off: 'No'
                    });


                })
                </script>
                }
        }
    </div>
</div>
