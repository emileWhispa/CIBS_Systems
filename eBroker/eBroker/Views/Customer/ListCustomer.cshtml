@model IEnumerable<eBroker.Client>
@using GridMvc.Html
@{
        ViewBag.Title = "Customers";
        Layout = "~/Views/Shared/_Layout.cshtml";
}



                      <div class="content">
                          <div class="modal fade f-modal" id="modal-default">
                              <div class="modal-dialog modal-lg">
                                  <div class="modal-content">

                                      @Html.Partial("CustomerInfo", new eBroker.Client())

                                  </div>
                                  <!-- /.modal-content -->
                              </div>
                              <!-- /.modal-dialog -->
                          </div>
                          <div class="clearfix">
                              <button type="button" class="btn btn-primary edit-button pull-right"><i class="fa fa-users"></i> New Customer</button>
                          </div>
                          <div class="box box-primary">
                              <div class="box-header">
                                  <div class="col-sm-6 pull-right">
                                      @using (Html.BeginForm("ListCustomer", "Customer", FormMethod.Get))
                                      {

                                          <div id="">
                                              <div class="input-group  text-center">
                                                  <input type="text" name="query" id="query" class="form-control input-sm" placeholder="Search Customer by Name, Contact Person, Mobile....." />
                                                  <span class="input-group-btn">
                                                      <button class="btn btn-info btn-sm" value="Search" type="submit"><i class="fa fa-search"></i></button>
                                                  </span>
                                              </div>
                                          </div>

                                      }
                                  </div>
                                  <h3 class="box-title"><i class="fa fa-info-circle"></i> Customer List {@Model.Count()}</h3>
                              </div>
                              <div class="box-body">
                                  <div class="row">
                                      <div class="box-body">
                                              <div class="table-responsive">
                                                  <div class="table table-bordered">
                                                      @Html.Grid(Model).Named("ga").Columns(col =>
                                                 {
                                                     col.Add(m => m.Id, true);
                                                     col.Add(m => m.client_name).Titled("Client Name");
                                                     col.Add(m => m.client_type).Titled("Type");
                                                     col.Add(m => m.mobile).Titled("Mobile Phone");
                                                     col.Add(m => m.client_national_id).Titled("National ID,TIN");
                                                     col.Add(m => m.email).Titled("E-mail");
                                                     col.Add(m => m.language).Titled("Language");
                                                     col.Add(m => m.recruited_by).Titled("Recruiter");
                                                     //col.Add().Sanitized(false).Encoded(false).RenderValueAs(m => Html.ActionLink("Insurance Policy(ies)", "InsurancePolicy"));
                                                     col.Add().Sanitized(false).Encoded(false).RenderValueAs(m => Html.Bootstrap().ActionLink("Insurance Policy(ies)", "CustomerPolicy", "Policy").RouteValues(new { ccode = m.Id }));
                                                     col.Add().Titled("").Sanitized(false).Encoded(false).RenderValueAs(m => Html.ActionLink("Edit", "CustomerInfo", "Customer", new { Id = m.Id }, new { @class = "edit-button btn-sm btn-flat btn-primary" }));
                                                 }).WithPaging(10).Sortable(true)

                                                  </div>
                                                  @Html.Bootstrap().ActionLinkButton("Excel", "ExportToExcel", "Customer").PrependIcon("fa fa-file-excel-o")
                                              </div>
                                          </div>

                                  </div>
                              </div>

                          </div>

                      </div>

    @Scripts.Render("~/bundles/jqueryval")
