@model IEnumerable<eBroker.LoanApplication_Property>
@using GridMvc.Html
@{
    ViewBag.Title = "Loan Application Property List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <div class="panel panel-green">
        <div class="panel-heading">Loan Application Property List</div>
        <div class="panel-body">
            <div class="row">
                <div class="panel-body">
                    <div class="row">
                        @*@if( ViewBag.DisableAddNew==0)//
                        {
                        *@<div class="col-sm-2">
                            @*<span><i class="fa fa-briefcase"></i>@Html.ActionLink(" Add Property", "LoanApplicationPropertyInfo", new {AId=ViewBag.LoanApplicationId, Id=0})</span>*@
                        </div>
                        @*}*@
                    </div>
                    <br />
                    <div class="row">
                        <div class="table table-bordered">
                            @Html.Grid(Model).Named("ga").Columns(col =>
                           {
                               col.Add(m => m.Id, true);
                               col.Add().Titled("View").Sanitized(false).Encoded(false).RenderValueAs(m => Html.Bootstrap().ActionLink("View", "LoanApplicationPropertyInfoView").RouteValues(new { Id = m.Id, AId = ViewBag.LoanApplicationId }).PrependIcon("fa fa-pencil-square-o"));
                               //col.Add(m => m.InsurancePolicies.policy_no).Titled("Policy No.");
                               //col.Add(m => m.InsurancePolicies.InsuranceProducts.product_name).Titled("Product");
                               col.Add(m => m.property_description).Titled("Description");
                               col.Add(m => m.plot_number).Titled("Plot Number");
                               col.Add(m => m.property_use).Titled("Use");
                               col.Add(m => m.wall_material).Titled("Wall Type");
                               col.Add(m => m.roof_material).Titled("Roof Type");
                               col.Add(m => m.window_material).Titled("Windows Type");
                               col.Add(m => m.insured_value).Titled("Value").Format("{0:#,##}");
                           }).WithPaging(10).Sortable(true)

                        </div>
                    </div>
                </div>
                                @if(@Model.Count()>0)
                {
                            <div class="col-sm-6">
                                @Html.Bootstrap().ActionLinkButton("Submit Quote", "QuoteLoanApplication", "LoanApplication").PrependIcon("fa fa-send").RouteValues(new { AId = ViewBag.LoanApplicationId  })
                            </div>
                }

            </div>

        </div>
                <div class="panel-footer">
                    <span><i class="fa fa-backward"></i>@Html.ActionLink("Back to Loan Applications", "ListSubmittedLoanApplication")</span>
                </div>
    </div>

</div>