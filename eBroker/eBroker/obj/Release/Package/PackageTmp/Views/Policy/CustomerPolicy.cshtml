@model IEnumerable<eBroker.InsurancePolicy>
@using GridMvc.Html
@using eBroker
@{
    ViewBag.Title = "Insurance Policies";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Client client = ViewBag.ClientInfo;
}
@using (Html.BeginForm("ListPolicy", "Policy", FormMethod.Get))
{
    <div class="container">
        <div class="panel panel-green">
            <div class="panel-heading">Insurance Policies {@client.client_name} </div>
            <div class="panel-body">
                <div class="row">
                    <div class="panel-body">

                        <div class="row">
                            <div class="table table-bordered">
                                @Html.Grid(Model).Named("ga").Columns(col =>
                           {
                               col.Add(m => m.Id, true);
                               //col.Add().Titled("").Sanitized(false).Encoded(false).RenderValueAs(m => Html.Bootstrap().ActionLink("Edit", "PolicyInfo").RouteValues(new { Id = m.Id }).PrependIcon("fa fa-pencil-square-o"));
                               col.Add(m => m.policy_no).Titled("Policy No.");
                               col.Add(m => m.policy_type).Titled("Type");
                               col.Add(m => m.InsuranceProducts.product_name).Titled("Product");
                               col.Add(m => m.Partners.company_short_name).Titled("Insurer");
                               col.Add(m => m.Clients.client_name).Titled("Client Name");
                               col.Add(m => m.effective_dt).Titled("Effective Date").Format("{0:yyyy-MM-dd}");
                               col.Add(m => m.expiry_dt).Titled("Expiry Date").Format("{0:yyyy-MM-dd}");
                               col.Add(m => m.net_premium).Titled("Premium").Format("{0:#,##0}");
                               //col.Add(m => m.renewable).Titled("Renewable");
                               //col.Add().Sanitized(false).Encoded(false).RenderValueAs(m => Html.ActionLink("View Insurance Policy(ies)", "InsurancePolicy"));
                               //col.Add().Sanitized(false).Encoded(false).RenderValueAs(m => Html.Bootstrap().ActionLink("Items", "PolicyItems").RouteValues(new { CId = m.Id }).PrependIcon("fa fa-search-plus"));
                               //col.Add().Sanitized(false).Encoded(false).RenderValueAs(m => Html.Bootstrap().ActionLink("Loan Accounts", "ListPolicyLoan").RouteValues(new { CId = m.Id }).PrependIcon("fa fa-search-plus"));

                           }).WithPaging(10).Sortable(true)

                            </div>
                                @Html.Bootstrap().ActionLinkButton("Excel", "ExportToExcel", "Policy").PrependIcon("fa fa-file-excel-o").RouteValues(new{ccode=client.Id.ToString()})
                        </div>
                    </div>

                </div>
            </div>

        </div>
        <script>
            $('#ExpStartDate').datepicker({
                dateFormat: "dd-M-yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-20:+1"
            });

            $('#ExpEndDate').datepicker({
                dateFormat: "dd-M-yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-20:+20"
            });

            $('#EffStartDate').datepicker({
                dateFormat: "dd-M-yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-20:+1"
            });
            $('#EffEndDate').datepicker({
                dateFormat: "dd-M-yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-20:+1"
            });
        </script>

    </div>
}
