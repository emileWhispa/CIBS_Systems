@model IEnumerable<eBroker.SMS_Log>
@using GridMvc.Html
@{
    ViewBag.Title = "View SMS Notice History";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string startDate = ViewBag.StartDate;
    string endDate = ViewBag.EndDate;
}
<form action="SMSView" method="get" class="form-inline">
    <div class="content">
        <div class="box box-primary">
            <div class="box-header">View SMS Notice History {@ViewBag.StartDate To @ViewBag.EndDate} ** Count: @Model.Count()</div>
            <div class="box-body">
                <div class="row">
                    <div class="box-body">
                        <div class="row">
                            <div class="col-sm-10">
                                <div id="custom-search-input">

                                    <div class="form-inline">
                                        <div class="form-group">
                                            <input type="text" value="@startDate" name="startDate" id="startDate" class="form-control input-sm" placeholder="Start Date" autocomplete="off" />
                                        </div>
                                        <div class="form-group">
                                            <input type="text" value="@endDate" name="endDate" id="endDate" class="form-control input-sm" placeholder="End Date" autocomplete="off" />
                                                 
                                        </div>
                                        <div class="form-group">
                                            <button class="btn btn-info btn-sm" value="Search" type="submit"><i class="fa fa-search"></i></button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="table-responsive">
                            <div class="table table-bordered">
                                @Html.Grid(Model).Named("ga").Columns(col =>
                           {
                               col.Add(m => m.Id, true);
                               //col.Add().Titled("Edit").Sanitized(false).Encoded(false).RenderValueAs(m => Html.Bootstrap().ActionLink("Edit", "PolicyInfo").RouteValues(new { Id = m.Id }).PrependIcon("fa fa-pencil-square-o"));
                               col.Add(m => m.policy_no).Titled("Policy No.");
                               // col.Add(m => m.policy_type).Titled("Type");
                               col.Add(m => m.insurer).Titled("Insurer");
                               col.Add(m => m.client_name).Titled("Client Name");
                               col.Add(m => m.phone).Titled("Mobile");
                               col.Add(m => m.expiry_date).Titled("Expiry Date").Format("{0:yyyy-MM-dd}");
                               col.Add(m => m.status).Titled("Status").Format("{0:#,##0}");
                               col.Add(m => m.balance).Titled("Balance").Format("{0:#,##0}");
                               col.Add(m => m.Content).Titled("Message");
                               col.Add(m => m.user_id).Titled("User");
                               col.Add(m => m.system_date).Titled("System Date").Format("{0:yyyy-MM-dd hh:mm:ss}");
                           }).WithPaging(10).Sortable(true)

                            </div>
                            @if (Model.Count() > 0)
                            {
                                @Html.Bootstrap().ActionLinkButton("Excel", "SMSToExcel", "ExpiryNotice").RouteValues(new { startDate = startDate, endDate = endDate }).PrependIcon("fa fa-file-excel-o")
                            }
                        </div>
                    </div>

                </div>
            </div>

        </div>
        <script>
            $('#startDate').datepicker({
                format: "yyyy-mm-dd",
                changeMonth: true,
                changeYear: true,
                yearRange: "-20:+0"
            });

            $('#endDate').datepicker({
                format: "yyyy-mm-dd",
                changeMonth: true,
                changeYear: true,
                yearRange: "-1:+20"
            });
        </script>

    </div>
</form>
